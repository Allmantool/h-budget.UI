module.exports = {
	branches: [{ name: 'master' }, { name: 'release', channel: 'release', prerelease: 'rc' }],
	tagFormat: 'v${version}',
	plugins: [
		[
			'@semantic-release/commit-analyzer',
			{
				preset: 'conventionalcommits',
				presetConfig: {
					headerPattern: '.*',
				},
				releaseRules: [
					{ type: 'feat', release: 'minor' },
					{ type: 'fix', release: 'patch' },
					{ type: 'perf', release: 'patch' },
					{ type: 'revert', release: 'patch' },
					{ type: 'docs', release: false },
					{ type: 'style', release: false },
					{ type: 'test', release: false },
					{ type: 'ci', release: false },
					{ type: 'refactor', release: false },
					{ type: 'build', release: 'patch' },
					{ type: 'chore', release: 'patch' },
					{ type: '*', release: 'patch' },
					{ scope: 'deps', release: 'patch' },
					{ breaking: true, release: 'major' },
				],
				defaultReleaseType: 'patch',
				parserOpts: {
					noteKeywords: ['BREAKING CHANGE', 'BREAKING CHANGES'],
				},
			},
		],
		'@semantic-release/release-notes-generator',
		[
			'@semantic-release/changelog',
			{
				preset: 'conventionalcommits',
				changelogFile: 'CHANGELOG.md',
				changelogTitle: '# ðŸ“¦ Changelog',
			},
		],
		[
			'@semantic-release/git',
			{
				assets: ['package.json', 'package-lock.json', 'CHANGELOG.md'],
				message: [
					'chore(release): ${nextRelease.gitTag} [skip ci]\n\n${nextRelease.notes}',
					'',
					'ðŸ”– Release notes:',
					'${nextRelease.notes}',
					'',
					'Generated by semantic-release ðŸš€',
				].join('\n'),
			},
		],
		[
			'@semantic-release/github',
			{
				assets: [{ path: 'CHANGELOG.md', label: 'Changelog' }],
				releaseName: '${nextRelease.gitTag}',
				successComment: false,
				failComment: false,
				releasedLabels: false,
			},
		],
	],
};
